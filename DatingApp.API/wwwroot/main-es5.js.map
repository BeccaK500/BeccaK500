{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/_models/Pagination.ts","webpack:///src/app/_resolver/lists.resolver.ts","webpack:///src/app/_resolver/member-detail.resolver.ts","webpack:///src/app/_resolver/member-edit.resolver.ts","webpack:///src/app/_resolver/member-list.resolver.ts","webpack:///src/app/_resolver/messages.resolver.ts","webpack:///src/app/_services/alertify.service.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/_services/error.interceptor.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.html","webpack:///src/app/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/lists/lists.component.html","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","authService","router","alertify","loggedIn","error","navigate","PreventUnsavedChanges","component","editForm","dirty","confirm","PaginatedResult","ListsResolver","userService","pageNumber","pageSize","likesParam","route","getUsers","pipe","MemberDetailResolver","getUser","params","MemberEditResolver","decodedToken","nameid","MemberListResolver","MessagesResolver","messageContainer","getMessages","AlertifyService","message","okCallback","AuthService","http","baseUrl","apiUrl","jwtHelper","photoUrl","currentPhotoUrl","asObservable","next","model","post","response","user","localStorage","setItem","token","JSON","stringify","decodeToken","currentUser","changeMemberPhoto","getItem","isTokenExpired","ErrorInterceptor","handle","status","statusText","applicationError","headers","get","serverError","modalStateErrors","errors","key","ErrorInterceptorProvider","provide","useClass","multi","UserService","page","itemsPerPage","userParams","paginatedResult","append","minAge","maxAge","gender","orderBy","observe","result","body","pagination","parse","put","userId","recipientId","messageId","subscribe","AdminPanelComponent","AppComponent","tokenGetter","AppModule","HomeComponent","registerMode","ListsComponent","data","users","currentPage","res","event","loadUsers","MemberCardComponent","sendLike","success","knownAs","MemberDetailComponent","alerify","queryParams","selectedTab","memberTabs","tabs","active","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photos","photo","push","small","url","medium","big","description","tabId","MemberEditComponent","$event","returnValue","updateUser","reset","MemberListComponent","genderList","value","display","MemberMessagesComponent","newMessage","loadMessages","currentUserId","getMessageThread","messages","i","length","isRead","markAsRead","sendMessage","unshift","content","PhotoEditorComponent","getMemberPhotoChange","hasBaseDropZoneOver","initializeUploader","uploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","dateAdded","isMain","setMainPhoto","currentMain","filter","p","deletePhoto","splice","findIndex","MessagesComponent","deleteMessage","m","NavComponent","login","removeItem","RegisterComponent","fb","cancelRegister","bsConfig","containerClass","createRegisterForm","registerForm","group","username","required","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","validator","passwordMatchValidator","g","mismatch","valid","Object","assign","register","emit","environment","production","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService){}\n\n  canActivate(\n    ): boolean {\n      if (this.authService.loggedIn()){\n        return true;\n      }\n\n      this.alertify.error('You shall not Pass!!!!');\n      this.router.navigate(['/home']);\n      return false;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { CanDeactivate } from '@angular/router';\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Are you sure you want to continue?  Any unsaved changes will be lost');\n        }\n        return true;\n    }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n  }\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n  }\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService\r\n      .getUsers(this.pageNumber, this.pageSize, null, this.likesParam)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.alertify.error('Problem retrieving data');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {User} from '../_models/user' ;\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n        catchError(error => {\r\n            this.alertify.error('Problem retrieving data');\r\n            this.router.navigate(['/members']);\r\n            return of(null);\r\n               })\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {User} from '../_models/user' ;\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    // tslint:disable-next-line: max-line-length\r\n    constructor(private userService: UserService, private authService: AuthService, private router: Router, private alertify: AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n        catchError(error => {\r\n            this.alertify.error('Problem retrieving your data');\r\n            this.router.navigate(['/members']);\r\n            return of(null);\r\n               })\r\n        );\r\n\r\n    }\r\n\r\n}\r\n ","\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}","  \r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService\r\n      .getMessages(\r\n        this.authService.decodedToken.nameid,\r\n        this.pageNumber,\r\n        this.pageSize,\r\n        this.messageContainer\r\n      )\r\n      .pipe(\r\n        catchError(() => {\r\n          this.alertify.error('Problem retrieving messages');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any) {\n  alertify.confirm(message, (e: any) => {\n    if (e) {\n      okCallback();\n\n    }\n    else {}\n  });\n}\n\nsuccess(message: string) {\nalertify.success(message);\n}\n\nerror(message: string) {\n  alertify.error(message);\n  }\n\nwarning(message: string) {\n    alertify.warning(message);\n    }\n\nmessage(message: string) {\n      alertify.message(message);\n      }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models/user';\nimport {BehaviorSubject} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\nconstructor(private http: HttpClient) { }\n  // tslint:disable-next-line: member-ordering\n  baseUrl = environment.apiUrl + 'auth/';\n  // tslint:disable-next-line: member-ordering\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\nlogin(model: any){\n  return this.http.post(this.baseUrl + 'login', model)\n  .pipe(\n    map((response: any) => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('token', user.token);\n        localStorage.setItem('user', JSON.stringify(user.user));\n        this.decodedToken = this.jwtHelper.decodeToken(user.token);\n        this.currentUser = user.user;\n        this.changeMemberPhoto(this.currentUser.photoUrl);\n      }\n    })\n  );\n}\n\nregister(user: User) {\n  return this.http.post(this.baseUrl + 'register', user);\n}\n\nloggedIn() {\n  const token = localStorage.getItem('token');\n  return !this.jwtHelper.isTokenExpired(token);\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment} from '../../environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { PaginatedResult } from '../_models/Pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ngetUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\r\n\r\nconst paginatedResult: PaginatedResult<User[]> = new PaginatedResult<\r\nUser[]\r\n>();\r\n\r\nlet params = new HttpParams ();\r\n\r\nif (page != null && itemsPerPage != null) {\r\n  params = params.append('pageNumber', page);\r\n  params = params.append('pageSize', itemsPerPage);\r\n}\r\n\r\nif (userParams != null) {\r\n  params = params.append('minAge', userParams.minAge);\r\n  params = params.append('maxAge', userParams.maxAge);\r\n  params = params.append('gender', userParams.gender);\r\n  params = params.append('orderBy', userParams.orderBy);\r\n\r\n}\r\n\r\nif (likesParam === 'Likers') {\r\n  params = params.append('Likers', 'true');\r\n}\r\n\r\nif (likesParam === 'Likees') {\r\n  params = params.append('Likees', 'true');\r\n}\r\n\r\n\r\n\r\n\r\nreturn this.http\r\n.get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\r\n.pipe(\r\n  map(response => {\r\n    paginatedResult.result = response.body;\r\n    if (response.headers.get('Pagination') != null) {\r\n      paginatedResult.pagination = JSON.parse(\r\n        response.headers.get('Pagination')\r\n      );\r\n    }\r\n    return paginatedResult;\r\n  })\r\n);\r\n}\r\n\r\ngetUser(id): Observable<User> {\r\n\r\n  return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n}\r\n\r\nupdateUser(id: number, user: User) {\r\n  return this.http.put(this.baseUrl + 'users/' + id, user);\r\n}\r\n\r\nsetMainPhoto(userId: number, id: number) {\r\n  return this.http.post(\r\n    this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\r\n    {}\r\n  );\r\n}\r\n\r\ndeletePhoto(userId: number, id: number) {\r\n  return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\r\n}\r\n\r\n\r\nsendLike(id: number, recipientId: number) {\r\n  return this.http.post(\r\n    this.baseUrl + 'users/' + id + '/like/' + recipientId,\r\n    {}\r\n  );\r\n}\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<\r\n      Message[]\r\n    >();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n    return this.http\r\n      .get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {\r\n        observe: 'response',\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') !== null) {\r\n            paginatedResult.pagination = JSON.parse(\r\n              response.headers.get('Pagination')\r\n            );\r\n          }\r\n\r\n          return paginatedResult;\r\n        })\r\n      );\r\n\r\n  }\r\n\r\n  getMessageThread(id: number, recipientId: number) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId\r\n    );\r\n  }\r\nsendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(\r\n      this.baseUrl + 'users/' + userId + '/messages/' + id,\r\n      {}\r\n    );\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http\r\n      .post(\r\n        this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read',\r\n        {}\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n\r\n\r\n","<p>\n  admin-panel works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs/ngx-bootstrap-tabs';\r\nimport { MemberDetailResolver } from './_resolver/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolver/member-list.resolver';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolver/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker/ngx-bootstrap-datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ListsResolver } from './_resolver/lists.resolver';\r\nimport { MessagesResolver } from './_resolver/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\n\r\n\r\n\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n}\r\n\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      MemberListComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberCardComponent,\r\n      MemberMessagesComponent,\r\n      AdminPanelComponent\r\n\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      BsDropdownModule.forRoot(),\r\n      BrowserAnimationsModule,\r\n      BsDatepickerModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      TimeagoModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      ButtonsModule.forRoot(),\r\n\r\n      TabsModule.forRoot(),\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/api/auth']\r\n         }\r\n      }\r\n\r\n      )\r\n\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      MemberDetailResolver,\r\n      MemberListResolver, MemberEditResolver,\r\n      PreventUnsavedChanges,\r\n      ListsResolver,\r\n      MessagesResolver\r\n   ],\r\n\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\"   class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n<app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n \n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n\ncancelRegisterMode(registerMode: boolean) {\nthis.registerMode = registerMode;\n}\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div  *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n   <app-members-card [user]=\"user\"></app-members-card>\n  </div>\n    </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n</pagination>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        null,\n        this.likesParam\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\" ><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\" ><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>{{user.knownAs}}, {{user.age}}</h6>\n<p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-members-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <h1>{{user.knownAs}}'s Profile</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n          <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user.city}}, {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member since</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n          <tab heading=\"About {{user?.knownAs}}\">\n          <h4>Description</h4>\n          <p>{{user.introduction}}</p>\n          <h4>Looking For</h4>\n          <p>{{user?.lookingFor}}</p>\n        </tab>\n        <tab heading=\"Interests\"> \n          <h4>Interest</h4>\n          <p>{{user.interests}}</p>\n        </tab>\n        <tab heading=\"Photo\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"  style=\"display:block;\" ></ngx-gallery>\n        </tab>\n        <tab heading=\"Messages\">\n          <app-member-messages [recipientId]=\"user.id\"></app-member-messages>\n        </tab>\n\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alerify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n     // tslint:disable-next-line: no-string-literal\n     this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (const photo of this.user.photos) {\n      imageUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n\n\n\n  // loadUser() {\n  //   this.userService.getUser(+this.route.snapshot.params.id).subscribe(\n  //     (user: User) => {\n  //       this.user = user;\n  //     },\n  //     (error) => {\n  //       this.alerify.error(error);\n  //     }\n  //   );\n  // }\n","<div class=\"container mt-4\">\n\n  <div class=\"row\">\n    <div class=\"col-sm-4\"> <h1>Your Profile</h1></div>\n\n    <div class=\"col-sm-8\">\n     <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n       \n         <strong>Information:</strong> You have made changes! Any unsaved changes with be lost!\n       \n     </div>\n\n    </div>\n  \n  </div>\n  <div class=\"row\">\n\n\n    <div class=\"col-sm-4\">\n     \n      <div class=\"card\">\n        <img  class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p> {{user.city}}, {{user.country}} </p>\n          </div>\n        <div>\n          <strong>Age:</strong>\n          <p> {{user.age}} </p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p> {{user.lastActive | timeago}} </p>\n        </div>\n\n        <div>\n          <strong>Member since</strong>\n          <p>{{ user.created | date: 'mediumDate' }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n      \n       \n        <button\n            [disabled]=\"!editForm.dirty\"\n            form=\"editForm\"\n            class=\"btn btn-success btn-block\"\n          >\n            Save changes\n          </button>\n        \n      </div>\n    </div>\n  </div>\n    <div class=\"col-sm-8\">\n    <div class=\"tab-panel\">\n      <tabset class=\"member-tabset\">\n        <tab heading=\"Edit Profile\">\n          <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n         \n            <h4>Description</h4>\n    <textarea name=\"introduction\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n          <h4>Looking For</h4>\n          <textarea name=\"lookingFor\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n          <h4>Interests</h4>\n          <textarea name=\"interests\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n          <h4>Location Details</h4>\n          <div class=\"form-inline\">\n          <label for=\"city\">City</label>\n          <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\">\n          <label for=\"country\">Counrty</label>\n          <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.country\">\n        </div>\n        </form>\n      \n        </tab>\n        <tab heading=\"Edit Photos\">\n          <app-photo-editor [photos]=\"user.photos\" (getMemberPhotoChange)=\"updateMainPhoto($event)\" ></app-photo-editor>\n        </tab>\n      </tabset>\n    </div>\n    </div>\n\n\n  </div>\n\n\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm', {static: true}) editForm: NgForm;\n  user: User;\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line: no-string-literal\n      this.user = data['user'];\n      this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n\n\n    }\n      );\n  }\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success('Profile updated successfully');\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n\n  updateMainPhoto(photoUrl){\n    this.user.photoUrl = photoUrl;\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form c class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n    <div class=\"form-group\">\n          <label for=\"minAge\">Age From</label>\n          <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n            [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n          <label for=\"maxAge\">Age To</label>\n          <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\n             [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n          <label for=\"gender\">Show: </label>\n          <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n            [(ngModel)]=\"userParams.gender\" name=\"gender\">\n            <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n              {{gender.display}}\n            </option>\n          </select>\n        </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\"  style=\"margin-left:10px\">Reset Filter</button>\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\" btnRadio=\"lastActive\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n  </form>\n  <br>\n  <div class=\"row\">\n<div  *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n <app-members-card [user]=\"user\"></app-members-card>\n</div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n      [boundaryLinks]=\"true\"\n      [totalItems]=\"pagination.totalItems\"\n      [(ngModel)]=\"pagination.currentPage\"\n      [itemsPerPage]=\"pagination.itemsPerPage\"\n      (pageChanged)=\"pageChanged($event)\"\n\n      \n\n \n    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' }\r\n  ];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(\r\n        this.pagination.currentPage,\r\n        this.pagination.itemsPerPage,\r\n        this.userParams\r\n      )\r\n      .subscribe(\r\n        (res: PaginatedResult<User[]>) => {\r\n          this.users = res.result;\r\n          this.pagination = res.pagination;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{ message.senderKnownAs }}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\"\n                  >(unread)</span\n                >\n                <span *ngIf=\"message.isRead\" class=\"text-success\"\n                  >(Read {{ message.dateRead | timeago }})</span\n                >\n              </small>\n              <strong class=\"primary-font float-right\">{{\n                message.senderKnownAs\n              }}</strong>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"newMessage.content\"\n          name=\"content\"\n          required\n          class=\"form-control input-sm\"\n          placeholder=\"send a private message\"\n        />\n        <div class=\"input-group-append\">\n          <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/message';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (\n              messages[i].isRead === false &&\n              messages[i].recipientId === currentUserId\n            ) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        messages => {\n          this.messages = messages;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe(\n        (message: Message) => {\n          this.messages.unshift(message);\n          this.newMessage.content = '';\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\" >\n<img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\">\n<div class=\"text-center\" >\n   <button\ntype=\"button\"\n[ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n(click)=\"setMainPhoto(photo)\"\n[disabled]=\"photo.isMain\"\nclass=\"btn btn-sm mr-1\"\n>\nMain\n</button>\n<button\ntype=\"button\"\nclass=\"btn btn-danger btn-sm\"\n[disabled]=\"photo.isMain\"\n(click)=\"deletePhoto(photo.id)\"\n>\n<i class=\"fa fa-trash-o\"></i>\n</button>\n</div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n\n         Drop Photos Here\n      </div>\n\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\" >\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n         \n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n     \n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n\n\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel \n          </button>\n\n\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash-o\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'users/' +\n        this.authService.decodedToken.nameid +\n        '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n        };\n        this.photos.push(photo);\n        if (photo.isMain)\n        {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.currentMain = this.photos.filter((p) => p.isMain === true)[0];\n          this.currentMain.isMain = false;\n          photo.isMain = true;\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        },\n        (error) => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService\n        .deletePhoto(this.authService.decodedToken.nameid, id)\n        .subscribe(\n          () => {\n            this.photos.splice(\n              this.photos.findIndex((p) => p.id === id),\n              1\n            );\n            this.alertify.success('Photo has been deleted');\n          },\n          (error) => {\n            this.alertify.error('Failed to delete the photo');\n          }\n        );\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Unread\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Inbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Outbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr\n        *ngFor=\"let message of messages\"\n        [routerLink]=\"[\n          '/members',\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId\n        ]\"\n        [queryParams]=\"{ tab: 3 }\"\n      >\n        <td>{{ message.content }}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n            <img\n              src=\"{{ message?.senderPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.senderKnownAs }}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n            <img\n              src=\"{{ message?.recipientPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.recipientKnownAs }}</strong>\n          </div>\n        </td>\n        <td>{{ message.messageSent | timeago }}</td>\n        <td>\n          <button\n            class=\"btn btn-danger\"\n            (click)=\"$event.stopPropagation()\"\n            (click)=\"deleteMessage(message.id)\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe(\n        (res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\n      'Are you sure you want to delete this message?',\n      () => {\n        this.userService\n          .deleteMessage(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.messages.splice(\n                this.messages.findIndex(m => m.id === id),\n                1\n              );\n              this.alertify.success('Message has been deleted');\n            },\n            error => {\n              this.alertify.error('Failed to delete the message');\n            }\n          );\n      }\n    );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Kwik Dating</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/members']\" >Matches<span class=\"sr-only\"></span></a>\n      </li>\n      <li class=\"nav-item\"  routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messagessss</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/admin']\">Admin</a>\n      </li>\n    \n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span class=\"mr-1\">\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\n      </span>\n\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n       Welcome {{authService.decodedToken?.unique_name | titlecase}}\n      </a>\n\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\" ><i class=\"fa fa-user\"></i>Edit Profile</a>\n       <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\"(click)=\"logout()\"><i class=\"fa fa-sign-out\"></i>Logout</a>\n      </div>\n    </div>\n\n\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"model.username\" >\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\" >\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n\n  </div>\n  \n\n\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Routes, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n   this.authService.login(this.model).subscribe(next => {\n     this.alertify.success('Logged in Successfully');\n   }, error => {\n     this.alertify.error('Unauthorised');\n   }, () => {\n    this.router.navigate(['/members']);\n   } );\n\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n}\n\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input\n        class=\"mr-3\"\n        type=\"radio\"\n        value=\"male\"\n        formControlName=\"gender\"\n      />Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input\n        class=\"mr-3\"\n        type=\"radio\"\n        value=\"female\"\n        formControlName=\"gender\" \n      />Female\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('username').errors &&\n          registerForm.get('username').touched\n      }\"\n      class=\"form-control\"\n      formControlName=\"username\"\n      placeholder=\"Username\"\n    />\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('knownAs').errors &&\n          registerForm.get('knownAs').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Known as\"\n      formControlName=\"knownAs\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('knownAs').touched &&\n        registerForm.get('knownAs').hasError('required')\n      \"\n    >\n      Known as is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('dateOfBirth').errors &&\n          registerForm.get('dateOfBirth').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Date of Birth\"\n      formControlName=\"dateOfBirth\"\n      type=\"text\"\n      bsDatepicker\n      [bsConfig]=\"bsConfig\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('dateOfBirth').touched &&\n        registerForm.get('dateOfBirth').hasError('required')\n      \"\n    >\n      Date of Birth is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('city').errors && registerForm.get('city').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"City\"\n      formControlName=\"city\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('city').touched &&\n        registerForm.get('city').hasError('required')\n      \"\n    >\n      City is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('country').errors &&\n          registerForm.get('country').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Country\"\n      formControlName=\"country\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('country').touched &&\n        registerForm.get('country').hasError('required')\n      \"\n    >\n      Country is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"password\"\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('password').errors &&\n          registerForm.get('password').touched\n      }\"\n      class=\"form-control\"\n      formControlName=\"password\"\n      placeholder=\"Password\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('required') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password is required\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('minlength') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password must be at least 4 characters\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('maxlength') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password cannot exceed 8 characters\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          (registerForm.get('confirmPassword').errors &&\n            registerForm.get('confirmPassword').touched) ||\n          (registerForm.get('confirmPassword').touched &&\n            registerForm.hasError('mismatch'))\n      }\"\n      type=\"password\"\n      class=\"form-control\"\n      formControlName=\"confirmPassword\"\n      placeholder=\"Confirm Password\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('confirmPassword').hasError('required') &&\n        registerForm.get('confirmPassword').touched\n      \"\n    >\n      Confirm Password is required\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.hasError('mismatch') &&\n        registerForm.get('confirmPassword').touched\n      \"\n    >\n      Passwords must match\n    </div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button\n      class=\"btn btn-success\"\n      [disabled]=\"!registerForm.valid\"\n      type=\"submit\"\n    >\n      Register\n    </button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">\n      Cancel\n    </button>\n  </div>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        gender: ['male'],\r\n        username: ['', Validators.required],\r\n        knownAs: ['', Validators.required],\r\n        dateOfBirth: [null, Validators.required],\r\n        city: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(4),\r\n            Validators.maxLength(8)\r\n          ]\r\n        ],\r\n        confirmPassword: ['', Validators.required]\r\n      },\r\n      { validator: this.passwordMatchValidator }\r\n    );\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.alertify.success('Registration succesful');\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        },\r\n        () => {\r\n          this.authService.login(this.user).subscribe(() => {\r\n            this.router.navigate(['/members']);\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}