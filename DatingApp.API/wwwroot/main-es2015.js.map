{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_models/Pagination.ts","./src/app/_resolver/lists.resolver.ts","./src/app/_resolver/member-detail.resolver.ts","./src/app/_resolver/member-edit.resolver.ts","./src/app/_resolver/member-list.resolver.ts","./src/app/_resolver/messages.resolver.ts","./src/app/_services/alertify.service.ts","./src/app/_services/auth.service.ts","./src/app/_services/error.interceptor.ts","./src/app/_services/user.service.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/lists/lists.component.html","./src/app/lists/lists.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService){}\n\n  canActivate(\n    ): boolean {\n      if (this.authService.loggedIn()){\n        return true;\n      }\n\n      this.alertify.error('You shall not Pass!!!!');\n      this.router.navigate(['/home']);\n      return false;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { CanDeactivate } from '@angular/router';\n\n@Injectable()\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\n    canDeactivate(component: MemberEditComponent) {\n        if (component.editForm.dirty) {\n            return confirm('Are you sure you want to continue?  Any unsaved changes will be lost');\n        }\n        return true;\n    }\n}\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n  }\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n  }\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  likesParam = 'Likers';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService\r\n      .getUsers(this.pageNumber, this.pageSize, null, this.likesParam)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.alertify.error('Problem retrieving data');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {User} from '../_models/user' ;\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private router: Router, private alertify: AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(route.params['id']).pipe(\r\n        catchError(error => {\r\n            this.alertify.error('Problem retrieving data');\r\n            this.router.navigate(['/members']);\r\n            return of(null);\r\n               })\r\n        );\r\n\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport {User} from '../_models/user' ;\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    // tslint:disable-next-line: max-line-length\r\n    constructor(private userService: UserService, private authService: AuthService, private router: Router, private alertify: AlertifyService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n        return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n        catchError(error => {\r\n            this.alertify.error('Problem retrieving your data');\r\n            this.router.navigate(['/members']);\r\n            return of(null);\r\n               })\r\n        );\r\n\r\n    }\r\n\r\n}\r\n ","\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../_models/user';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n    return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n      catchError(error => {\r\n        this.alertify.error('Problem retrieving data');\r\n        this.router.navigate(['/']);\r\n        return of(null);\r\n      })\r\n    );\r\n  }\r\n}","  \r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from '../_services/user.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\nimport { AuthService } from '../_services/auth.service';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  messageContainer = 'Unread';\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n    return this.userService\r\n      .getMessages(\r\n        this.authService.decodedToken.nameid,\r\n        this.pageNumber,\r\n        this.pageSize,\r\n        this.messageContainer\r\n      )\r\n      .pipe(\r\n        catchError(() => {\r\n          this.alertify.error('Problem retrieving messages');\r\n          this.router.navigate(['/home']);\r\n          return of(null);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nconfirm(message: string, okCallback: () => any) {\n  alertify.confirm(message, (e: any) => {\n    if (e) {\n      okCallback();\n\n    }\n    else {}\n  });\n}\n\nsuccess(message: string) {\nalertify.success(message);\n}\n\nerror(message: string) {\n  alertify.error(message);\n  }\n\nwarning(message: string) {\n    alertify.warning(message);\n    }\n\nmessage(message: string) {\n      alertify.message(message);\n      }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models/user';\nimport {BehaviorSubject} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\nconstructor(private http: HttpClient) { }\n  // tslint:disable-next-line: member-ordering\n  baseUrl = environment.apiUrl + 'auth/';\n  // tslint:disable-next-line: member-ordering\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\n\n  changeMemberPhoto(photoUrl: string) {\n    this.photoUrl.next(photoUrl);\n  }\n\nlogin(model: any){\n  return this.http.post(this.baseUrl + 'login', model)\n  .pipe(\n    map((response: any) => {\n      const user = response;\n      if (user) {\n        localStorage.setItem('token', user.token);\n        localStorage.setItem('user', JSON.stringify(user.user));\n        this.decodedToken = this.jwtHelper.decodeToken(user.token);\n        this.currentUser = user.user;\n        this.changeMemberPhoto(this.currentUser.photoUrl);\n      }\n    })\n  );\n}\n\nregister(user: User) {\n  return this.http.post(this.baseUrl + 'register', user);\n}\n\nloggedIn() {\n  const token = localStorage.getItem('token');\n  return !this.jwtHelper.isTokenExpired(token);\n}\n\n}\n\n\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError(error => {\r\n        if (error instanceof HttpErrorResponse) {\r\n          if (error.status === 401) {\r\n            return throwError(error.statusText);\r\n          }\r\n          const applicationError = error.headers.get('Application-Error');\r\n          if (applicationError) {\r\n            return throwError(applicationError);\r\n          }\r\n          const serverError = error.error;\r\n          let modalStateErrors = '';\r\n          if (serverError.errors && typeof serverError.errors === 'object') {\r\n            for (const key in serverError.errors) {\r\n              if (serverError.errors[key]) {\r\n                modalStateErrors += serverError.errors[key] + '\\n';\r\n              }\r\n            }\r\n          }\r\n          return throwError(modalStateErrors || serverError || 'Server Error');\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport const ErrorInterceptorProvider = {\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { environment} from '../../environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { PaginatedResult } from '../_models/Pagination';\r\nimport { map } from 'rxjs/operators';\r\nimport { Message } from '../_models/message';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\ngetUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\r\n\r\nconst paginatedResult: PaginatedResult<User[]> = new PaginatedResult<\r\nUser[]\r\n>();\r\n\r\nlet params = new HttpParams ();\r\n\r\nif (page != null && itemsPerPage != null) {\r\n  params = params.append('pageNumber', page);\r\n  params = params.append('pageSize', itemsPerPage);\r\n}\r\n\r\nif (userParams != null) {\r\n  params = params.append('minAge', userParams.minAge);\r\n  params = params.append('maxAge', userParams.maxAge);\r\n  params = params.append('gender', userParams.gender);\r\n  params = params.append('orderBy', userParams.orderBy);\r\n\r\n}\r\n\r\nif (likesParam === 'Likers') {\r\n  params = params.append('Likers', 'true');\r\n}\r\n\r\nif (likesParam === 'Likees') {\r\n  params = params.append('Likees', 'true');\r\n}\r\n\r\n\r\n\r\n\r\nreturn this.http\r\n.get<User[]>(this.baseUrl + 'users', { observe: 'response', params })\r\n.pipe(\r\n  map(response => {\r\n    paginatedResult.result = response.body;\r\n    if (response.headers.get('Pagination') != null) {\r\n      paginatedResult.pagination = JSON.parse(\r\n        response.headers.get('Pagination')\r\n      );\r\n    }\r\n    return paginatedResult;\r\n  })\r\n);\r\n}\r\n\r\ngetUser(id): Observable<User> {\r\n\r\n  return this.http.get<User>(this.baseUrl + 'users/' + id);\r\n}\r\n\r\nupdateUser(id: number, user: User) {\r\n  return this.http.put(this.baseUrl + 'users/' + id, user);\r\n}\r\n\r\nsetMainPhoto(userId: number, id: number) {\r\n  return this.http.post(\r\n    this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain',\r\n    {}\r\n  );\r\n}\r\n\r\ndeletePhoto(userId: number, id: number) {\r\n  return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id);\r\n}\r\n\r\n\r\nsendLike(id: number, recipientId: number) {\r\n  return this.http.post(\r\n    this.baseUrl + 'users/' + id + '/like/' + recipientId,\r\n    {}\r\n  );\r\n}\r\n\r\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\r\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<\r\n      Message[]\r\n    >();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('MessageContainer', messageContainer);\r\n\r\n    if (page != null && itemsPerPage != null) {\r\n      params = params.append('pageNumber', page);\r\n      params = params.append('pageSize', itemsPerPage);\r\n    }\r\n    return this.http\r\n      .get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {\r\n        observe: 'response',\r\n        params\r\n      })\r\n      .pipe(\r\n        map(response => {\r\n          paginatedResult.result = response.body;\r\n          if (response.headers.get('Pagination') !== null) {\r\n            paginatedResult.pagination = JSON.parse(\r\n              response.headers.get('Pagination')\r\n            );\r\n          }\r\n\r\n          return paginatedResult;\r\n        })\r\n      );\r\n\r\n  }\r\n\r\n  getMessageThread(id: number, recipientId: number) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId\r\n    );\r\n  }\r\nsendMessage(id: number, message: Message) {\r\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\r\n  }\r\n\r\n  deleteMessage(id: number, userId: number) {\r\n    return this.http.post(\r\n      this.baseUrl + 'users/' + userId + '/messages/' + id,\r\n      {}\r\n    );\r\n  }\r\n\r\n  markAsRead(userId: number, messageId: number) {\r\n    this.http\r\n      .post(\r\n        this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read',\r\n        {}\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n\r\n\r\n","<p>\n  admin-panel works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-nav></app-nav>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AuthService } from './_services/auth.service';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { appRoutes } from './routes';\r\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs/ngx-bootstrap-tabs';\r\nimport { MemberDetailResolver } from './_resolver/member-detail.resolver';\r\nimport { MemberListResolver } from './_resolver/member-list.resolver';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberEditResolver } from './_resolver/member-edit.resolver';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker/ngx-bootstrap-datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination/ngx-bootstrap-pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { ListsResolver } from './_resolver/lists.resolver';\r\nimport { MessagesResolver } from './_resolver/messages.resolver';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\n\r\n\r\n\r\n\r\nexport function tokenGetter() {\r\n   return localStorage.getItem('token');\r\n}\r\n\r\n\r\n@NgModule({\r\n   declarations: [\r\n      AppComponent,\r\n      NavComponent,\r\n      HomeComponent,\r\n      RegisterComponent,\r\n      MemberListComponent,\r\n      ListsComponent,\r\n      MessagesComponent,\r\n      MemberDetailComponent,\r\n      MemberEditComponent,\r\n      PhotoEditorComponent,\r\n      MemberCardComponent,\r\n      MemberMessagesComponent,\r\n      AdminPanelComponent\r\n\r\n   ],\r\n   imports: [\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      HttpClientModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      BrowserAnimationsModule,\r\n      BsDropdownModule.forRoot(),\r\n      BsDropdownModule.forRoot(),\r\n      BrowserAnimationsModule,\r\n      BsDatepickerModule.forRoot(),\r\n      RouterModule.forRoot(appRoutes),\r\n      NgxGalleryModule,\r\n      FileUploadModule,\r\n      TimeagoModule.forRoot(),\r\n      PaginationModule.forRoot(),\r\n      ButtonsModule.forRoot(),\r\n\r\n      TabsModule.forRoot(),\r\n      JwtModule.forRoot({\r\n         config: {\r\n            tokenGetter: tokenGetter,\r\n            whitelistedDomains: ['localhost:5000'],\r\n            blacklistedRoutes: ['localhost:5000/api/auth']\r\n         }\r\n      }\r\n\r\n      )\r\n\r\n   ],\r\n   providers: [\r\n      AuthService,\r\n      ErrorInterceptorProvider,\r\n      MemberDetailResolver,\r\n      MemberListResolver, MemberEditResolver,\r\n      PreventUnsavedChanges,\r\n      ListsResolver,\r\n      MessagesResolver\r\n   ],\r\n\r\n   bootstrap: [\r\n      AppComponent\r\n   ]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"container mt-5\">\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\n    <h1>Find your match</h1>\n    <p class=\"lead\">Come on in to view your matches... All you need to do is sign up!</p>\n    <div class=\"text-center\">\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\n    </div>\n  </div>\n\n  <div *ngIf=\"registerMode\"   class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-4\">\n<app-register (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode = false;\n \n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  registerToggle(){\n    this.registerMode = true;\n  }\n\n\ncancelRegisterMode(registerMode: boolean) {\nthis.registerMode = registerMode;\n}\n\n}\n","<div class=\"text-center mt-3\">\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\'ve Liked'}} : {{pagination.totalItems}}</h2>\n</div>\n\n<div class=\"container mt-3\">\n\n<div class=\"row\">\n  <div class=\"btn-group\">\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likers\" (click)=\"loadUsers()\">Members who like me</button>\n    <button class=\"btn btn-primary\" [(ngModel)]=\"likesParam\" btnRadio=\"Likees\" (click)=\"loadUsers()\">Members who I like</button>\n  </div>\n</div>\n\n<br>\n\n<div class=\"row\">\n  <div  *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n   <app-members-card [user]=\"user\"></app-members-card>\n  </div>\n    </div>\n\n\n\n</div>\n\n<div class=\"d-flex justify-content-center\">\n<pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\" [(ngModel)]=\"pagination.currentPage\"\n  (pageChanged)=\"pageChanged($event)\" previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\"\n  >\n\n</pagination>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { AuthService } from '../_services/auth.service';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '../../../node_modules/@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n\n  loadUsers() {\n    this.userService\n      .getUsers(\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        null,\n        this.likesParam\n      )\n      .subscribe(\n        (res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadUsers();\n  }\n}","<div class=\"card mb-4\">\n  <div class=\"card-img-wrapper\">\n    <img class=\"card-img-top\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n    <ul class=\"list-inline member-icons animate text-center\">\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" ><i class=\"fa fa-user\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" (click)=\"sendLike(user.id)\" ><i class=\"fa fa-heart\"></i></button></li>\n      <li class=\"list-inline-item\"><button class=\"btn btn-primary\" [routerLink]=\"['/members/', user.id]\" [queryParams]=\"{tab: 3}\" ><i class=\"fa fa-envelope\"></i></button></li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user\"></i>{{user.knownAs}}, {{user.age}}</h6>\n<p class=\"card-text text-muted text-center\">{{user.city}}</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-members-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <h1>{{user.knownAs}}'s Profile</h1>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <div class=\"card\">\n          <img class=\"card-img-top img-thumbnail\" src=\"{{user.photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location</strong>\n            <p>{{user.city}}, {{user?.country}}</p>\n          </div>\n          <div>\n            <strong>Age</strong>\n            <p>{{user.age}}</p>\n          </div>\n          <div>\n            <strong>Last Active</strong>\n            <p>{{user.lastActive | timeago}}</p>\n          </div>\n          <div>\n            <strong>Member since</strong>\n            <p>{{user.created | date: 'mediumDate'}}</p>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group d-flex\">\n            <button class=\"btn btn-primary w-100\">Like</button>\n            <button class=\"btn btn-success w-100\" (click)=\"selectTab(3)\">Message</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-8\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #memberTabs>\n          <tab heading=\"About {{user?.knownAs}}\">\n          <h4>Description</h4>\n          <p>{{user.introduction}}</p>\n          <h4>Looking For</h4>\n          <p>{{user?.lookingFor}}</p>\n        </tab>\n        <tab heading=\"Interests\"> \n          <h4>Interest</h4>\n          <p>{{user.interests}}</p>\n        </tab>\n        <tab heading=\"Photo\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\"  style=\"display:block;\" ></ngx-gallery>\n        </tab>\n        <tab heading=\"Messages\">\n          <app-member-messages [recipientId]=\"user.id\"></app-member-messages>\n        </tab>\n\n        </tabset>\n      </div>\n    </div>\n  </div>\n</div> ","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css'],\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs', { static: true }) memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(\n    private userService: UserService,\n    private alerify: AlertifyService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n     // tslint:disable-next-line: no-string-literal\n     this.user = data['user'];\n    });\n\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n\n    this.galleryOptions = [\n      {\n        width: '500px',\n        height: '500px',\n        imagePercent: 100,\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: false\n      }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n  getImages() {\n    const imageUrls = [];\n    for (const photo of this.user.photos) {\n      imageUrls.push({\n        small: photo.url,\n        medium: photo.url,\n        big: photo.url,\n        description: photo.description\n      });\n    }\n    return imageUrls;\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n}\n\n\n\n  // loadUser() {\n  //   this.userService.getUser(+this.route.snapshot.params.id).subscribe(\n  //     (user: User) => {\n  //       this.user = user;\n  //     },\n  //     (error) => {\n  //       this.alerify.error(error);\n  //     }\n  //   );\n  // }\n","<div class=\"container mt-4\">\n\n  <div class=\"row\">\n    <div class=\"col-sm-4\"> <h1>Your Profile</h1></div>\n\n    <div class=\"col-sm-8\">\n     <div *ngIf=\"editForm.dirty\" class=\"alert alert-info\">\n       \n         <strong>Information:</strong> You have made changes! Any unsaved changes with be lost!\n       \n     </div>\n\n    </div>\n  \n  </div>\n  <div class=\"row\">\n\n\n    <div class=\"col-sm-4\">\n     \n      <div class=\"card\">\n        <img  class=\"card-img-top img-thumbnail\" src=\"{{photoUrl || '../../../assets/user.png'}}\" alt=\"{{user.knownAs}}\">\n        <div class=\"card-body\">\n          <div>\n            <strong>Location:</strong>\n            <p> {{user.city}}, {{user.country}} </p>\n          </div>\n        <div>\n          <strong>Age:</strong>\n          <p> {{user.age}} </p>\n        </div>\n        <div>\n          <strong>Last Active:</strong>\n          <p> {{user.lastActive | timeago}} </p>\n        </div>\n\n        <div>\n          <strong>Member since</strong>\n          <p>{{ user.created | date: 'mediumDate' }}</p>\n        </div>\n      </div>\n      <div class=\"card-footer\">\n      \n       \n        <button\n            [disabled]=\"!editForm.dirty\"\n            form=\"editForm\"\n            class=\"btn btn-success btn-block\"\n          >\n            Save changes\n          </button>\n        \n      </div>\n    </div>\n  </div>\n    <div class=\"col-sm-8\">\n    <div class=\"tab-panel\">\n      <tabset class=\"member-tabset\">\n        <tab heading=\"Edit Profile\">\n          <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateUser()\">\n         \n            <h4>Description</h4>\n    <textarea name=\"introduction\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.introduction\"></textarea>\n          <h4>Looking For</h4>\n          <textarea name=\"lookingFor\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.lookingFor\"></textarea>\n          <h4>Interests</h4>\n          <textarea name=\"interests\" id=\"\" cols=\"30\" rows=\"6\" class=\"form-control\" [(ngModel)]=\"user.interests\"></textarea>\n          <h4>Location Details</h4>\n          <div class=\"form-inline\">\n          <label for=\"city\">City</label>\n          <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.city\">\n          <label for=\"country\">Counrty</label>\n          <input class=\"form-control\" type=\"text\" name=\"city\" [(ngModel)]=\"user.country\">\n        </div>\n        </form>\n      \n        </tab>\n        <tab heading=\"Edit Photos\">\n          <app-photo-editor [photos]=\"user.photos\" (getMemberPhotoChange)=\"updateMainPhoto($event)\" ></app-photo-editor>\n        </tab>\n      </tabset>\n    </div>\n    </div>\n\n\n  </div>\n\n\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\nimport { NgForm } from '@angular/forms';\nimport { UserService } from 'src/app/_services/user.service';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm', {static: true}) editForm: NgForm;\n  user: User;\n  photoUrl: string;\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertify: AlertifyService,\n    private userService: UserService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      // tslint:disable-next-line: no-string-literal\n      this.user = data['user'];\n      this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n\n\n    }\n      );\n  }\n  updateUser() {\n    this.userService\n      .updateUser(this.authService.decodedToken.nameid, this.user)\n      .subscribe(\n        next => {\n          this.alertify.success('Profile updated successfully');\n          this.editForm.reset(this.user);\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n\n  updateMainPhoto(photoUrl){\n    this.user.photoUrl = photoUrl;\n  }\n}\n","<div class=\"text-center mt-3\">\n  <h2>Your matches - {{pagination.totalItems}} found</h2>\n</div>\n\n<div class=\"container mt-3\">\n  <form c class=\"form-inline\" #form=\"ngForm\" (ngSubmit)=\"loadUsers()\" novalidate>\n    <div class=\"form-group\">\n          <label for=\"minAge\">Age From</label>\n          <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"minAge\"\n            [(ngModel)]=\"userParams.minAge\" name=\"minAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n          <label for=\"maxAge\">Age To</label>\n          <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px\" id=\"maxAge\"\n             [(ngModel)]=\"userParams.maxAge\" name=\"maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n          <label for=\"gender\">Show: </label>\n          <select class=\"form-control ml-1\" style=\"width: 130px\" id=\"gender\"\n            [(ngModel)]=\"userParams.gender\" name=\"gender\">\n            <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n              {{gender.display}}\n            </option>\n          </select>\n        </div>\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-left:10px\">Apply Filters</button>\n    <button type=\"button\" class=\"btn btn-info\" (click)=\"resetFilters()\"  style=\"margin-left:10px\">Reset Filter</button>\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\" btnRadio=\"lastActive\">Last Active</button>\n        <button type=\"button\" name=\"orderBy\" class=\"btn btn-primary\" (click)=\"loadUsers()\" [(ngModel)]=\"userParams.orderBy\" btnRadio=\"created\">Newest Members</button>\n      </div>\n    </div>\n  </form>\n  <br>\n  <div class=\"row\">\n<div  *ngFor=\"let user of users\" class=\"col-lg-2 col-md-3 col-sm-6\">\n <app-members-card [user]=\"user\"></app-members-card>\n</div>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n      [boundaryLinks]=\"true\"\n      [totalItems]=\"pagination.totalItems\"\n      [(ngModel)]=\"pagination.currentPage\"\n      [itemsPerPage]=\"pagination.itemsPerPage\"\n      (pageChanged)=\"pageChanged($event)\"\n\n      \n\n \n    previousText=\"&lsaquo;\" nextText=\"&rsaquo;\" firstText=\"&laquo;\" lastText=\"&raquo;\">\n\n  </pagination>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../_models/user';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AlertifyService } from '../../_services/alertify.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination, PaginatedResult } from 'src/app/_models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  users: User[];\r\n  user: User = JSON.parse(localStorage.getItem('user'));\r\n  genderList = [\r\n    { value: 'male', display: 'Males' },\r\n    { value: 'female', display: 'Females' }\r\n  ];\r\n  userParams: any = {};\r\n  pagination: Pagination;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private alertify: AlertifyService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.data.subscribe(data => {\r\n      this.users = data['users'].result;\r\n      this.pagination = data['users'].pagination;\r\n    });\r\n\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.userParams.orderBy = 'lastActive';\r\n  }\r\n\r\n  pageChanged(event: any): void {\r\n    this.pagination.currentPage = event.page;\r\n    this.loadUsers();\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\r\n    this.userParams.minAge = 18;\r\n    this.userParams.maxAge = 99;\r\n    this.loadUsers();\r\n  }\r\n\r\n  loadUsers() {\r\n    this.userService\r\n      .getUsers(\r\n        this.pagination.currentPage,\r\n        this.pagination.itemsPerPage,\r\n        this.userParams\r\n      )\r\n      .subscribe(\r\n        (res: PaginatedResult<User[]>) => {\r\n          this.users = res.result;\r\n          this.pagination = res.pagination;\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <div *ngIf=\"messages?.length === 0\">\n      No messages yet... say hi by using the message box below\n    </div>\n\n    <ul class=\"chat\">\n      <li *ngFor=\"let message of messages\">\n        <!-- to them -->\n        <div *ngIf=\"message.senderId == recipientId\">\n          <span class=\"chat-img float-left\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <strong class=\"primary-font\">{{ message.senderKnownAs }}</strong>\n              <small class=\"text-muted float-right\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n              </small>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n\n        <!-- to me -->\n        <div *ngIf=\"message.senderId != recipientId\">\n          <span class=\"chat-img float-right\">\n            <img\n              src=\"{{ message.senderPhotoUrl }}\"\n              alt=\"{{ message.senderKnownAs }}\"\n              class=\"rounded-circle\"\n            />\n          </span>\n          <div class=\"chat-body\">\n            <div class=\"header\">\n              <small class=\"text-muted\">\n                <span class=\"fa fa-clock-o\">{{\n                  message.messageSent | timeago\n                }}</span>\n                <span *ngIf=\"!message.isRead\" class=\"text-danger\"\n                  >(unread)</span\n                >\n                <span *ngIf=\"message.isRead\" class=\"text-success\"\n                  >(Read {{ message.dateRead | timeago }})</span\n                >\n              </small>\n              <strong class=\"primary-font float-right\">{{\n                message.senderKnownAs\n              }}</strong>\n            </div>\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <div class=\"card-footer\">\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"messageForm.valid && sendMessage()\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"newMessage.content\"\n          name=\"content\"\n          required\n          class=\"form-control input-sm\"\n          placeholder=\"send a private message\"\n        />\n        <div class=\"input-group-append\">\n          <button [disabled]=\"!messageForm.valid\" class=\"btn btn-primary\">\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../_models/message';\nimport { UserService } from '../../_services/user.service';\nimport { AuthService } from '../../_services/auth.service';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService\n      .getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (\n              messages[i].isRead === false &&\n              messages[i].recipientId === currentUserId\n            ) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(\n        messages => {\n          this.messages = messages;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService\n      .sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe(\n        (message: Message) => {\n          this.messages.unshift(message);\n          this.newMessage.content = '';\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n}","<div class=\"row\">\n  <div class=\"col-sm-2\" *ngFor=\"let photo of photos\" >\n<img src=\"{{photo.url}}\" class=\"img-thumbnail p-1\" alt=\"\">\n<div class=\"text-center\" >\n   <button\ntype=\"button\"\n[ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-secondary'\"\n(click)=\"setMainPhoto(photo)\"\n[disabled]=\"photo.isMain\"\nclass=\"btn btn-sm mr-1\"\n>\nMain\n</button>\n<button\ntype=\"button\"\nclass=\"btn btn-danger btn-sm\"\n[disabled]=\"photo.isMain\"\n(click)=\"deletePhoto(photo.id)\"\n>\n<i class=\"fa fa-trash-o\"></i>\n</button>\n</div>\n  </div>\n</div>\n<div class=\"row mt-3\">\n \n  <div class=\"col-md-3\">\n\n      <h3>Add Photos</h3>\n\n      <div ng2FileDrop\n           [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\"\n           (fileOver)=\"fileOverBase($event)\"\n           [uploader]=\"uploader\"\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n           <i class=\"fa fa-upload fa-3x\"></i>\n\n         Drop Photos Here\n      </div>\n\n\n      Multiple\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\n\n      Single\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n  </div>\n\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\" >\n\n      <h3>Upload queue</h3>\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n      <table class=\"table\">\n          <thead>\n          <tr>\n              <th width=\"50%\">Name</th>\n              <th>Size</th>\n         \n          </tr>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of uploader.queue\">\n              <td><strong>{{ item?.file?.name }}</strong></td>\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n     \n          </tr>\n          </tbody>\n      </table>\n\n      <div>\n          <div>\n              Queue progress:\n              <div class=\"progress mb-4\">\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n              </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-success btn-s\"\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n              <span class=\"fa fa-upload\"></span> Upload\n          </button>\n\n\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n              <span class=\"fa fa-ban\"></span> Cancel \n          </button>\n\n\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n              <span class=\"fa fa-trash-o\"></span> Remove\n          </button>\n      </div>\n\n  </div>\n\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Photo } from 'src/app/_models/photo';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { UserService } from '../../_services/user.service';\nimport { AlertifyService } from 'src/app/_services/alertify.service';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css'],\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url:\n        this.baseUrl +\n        'users/' +\n        this.authService.decodedToken.nameid +\n        '/photos',\n      authToken: 'Bearer ' + localStorage.getItem('token'),\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024,\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain,\n        };\n        this.photos.push(photo);\n        if (photo.isMain)\n        {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        }\n      }\n    };\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.userService\n      .setMainPhoto(this.authService.decodedToken.nameid, photo.id)\n      .subscribe(\n        () => {\n          this.currentMain = this.photos.filter((p) => p.isMain === true)[0];\n          this.currentMain.isMain = false;\n          photo.isMain = true;\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem(\n            'user',\n            JSON.stringify(this.authService.currentUser)\n          );\n        },\n        (error) => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n      this.userService\n        .deletePhoto(this.authService.decodedToken.nameid, id)\n        .subscribe(\n          () => {\n            this.photos.splice(\n              this.photos.findIndex((p) => p.id === id),\n              1\n            );\n            this.alertify.success('Photo has been deleted');\n          },\n          (error) => {\n            this.alertify.error('Failed to delete the photo');\n          }\n        );\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"btn-group\">\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Unread\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope\"></i> Unread\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Inbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-envelope-open\"></i> Inbox\n      </button>\n      <button\n        class=\"btn btn-primary\"\n        [(ngModel)]=\"messageContainer\"\n        btnRadio=\"Outbox\"\n        (click)=\"loadMessages()\"\n      >\n        <i class=\"fa fa-paper-plane\"></i> Outbox\n      </button>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length == 0\">\n    <h3>No messages</h3>\n  </div>\n\n  <div class=\"row\" *ngIf=\"messages.length > 0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer\">\n      <tr>\n        <th style=\"width: 40%\">Message</th>\n        <th style=\"width: 20%\">From / To</th>\n        <th style=\"width: 20%\">Sent / Received</th>\n        <th style=\"width: 20%\"></th>\n      </tr>\n      <tr\n        *ngFor=\"let message of messages\"\n        [routerLink]=\"[\n          '/members',\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId\n        ]\"\n        [queryParams]=\"{ tab: 3 }\"\n      >\n        <td>{{ message.content }}</td>\n        <td>\n          <div *ngIf=\"messageContainer != 'Outbox'\">\n            <img\n              src=\"{{ message?.senderPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.senderKnownAs }}</strong>\n          </div>\n          <div *ngIf=\"messageContainer == 'Outbox'\">\n            <img\n              src=\"{{ message?.recipientPhotoUrl }}\"\n              class=\"img-circle rounded-circle mr-1\"\n            />\n            <strong>{{ message.recipientKnownAs }}</strong>\n          </div>\n        </td>\n        <td>{{ message.messageSent | timeago }}</td>\n        <td>\n          <button\n            class=\"btn btn-danger\"\n            (click)=\"$event.stopPropagation()\"\n            (click)=\"deleteMessage(message.id)\"\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n\n<div class=\"d-flex justify-content-center\">\n  <pagination\n    [boundaryLinks]=\"true\"\n    [totalItems]=\"pagination.totalItems\"\n    [itemsPerPage]=\"pagination.itemsPerPage\"\n    [(ngModel)]=\"pagination.currentPage\"\n    (pageChanged)=\"pageChanged($event)\"\n    previousText=\"&lsaquo;\"\n    nextText=\"&rsaquo;\"\n    firstText=\"&laquo;\"\n    lastText=\"&raquo;\"\n  >\n  </pagination>\n</div>","\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private alertify: AlertifyService\n  ) {}\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService\n      .getMessages(\n        this.authService.decodedToken.nameid,\n        this.pagination.currentPage,\n        this.pagination.itemsPerPage,\n        this.messageContainer\n      )\n      .subscribe(\n        (res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n        },\n        error => {\n          this.alertify.error(error);\n        }\n      );\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm(\n      'Are you sure you want to delete this message?',\n      () => {\n        this.userService\n          .deleteMessage(id, this.authService.decodedToken.nameid)\n          .subscribe(\n            () => {\n              this.messages.splice(\n                this.messages.findIndex(m => m.id === id),\n                1\n              );\n              this.alertify.success('Message has been deleted');\n            },\n            error => {\n              this.alertify.error('Failed to delete the message');\n            }\n          );\n      }\n    );\n  }\n\n  pageChanged(event: any): void {\n    this.pagination.currentPage = event.page;\n    this.loadMessages();\n  }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/home']\">Kwik Dating</a>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/members']\" >Matches<span class=\"sr-only\"></span></a>\n      </li>\n      <li class=\"nav-item\"  routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/lists']\">Lists</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/messages']\">Messagessss</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" [routerLink]=\"['/admin']\">Admin</a>\n      </li>\n    \n    </ul>\n\n    <div *ngIf=\"loggedIn()\" class=\"dropdown\" dropdown>\n      <span class=\"mr-1\">\n        <img src=\"{{photoUrl || '../../assets/user.png'}}\" alt=\"\">\n      </span>\n\n      <a class=\"dropdown-toggle text-light\" dropdownToggle>\n       Welcome {{authService.decodedToken?.unique_name | titlecase}}\n      </a>\n\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n        <a class=\"dropdown-item\" [routerLink]=\"['/member/edit']\" ><i class=\"fa fa-user\"></i>Edit Profile</a>\n       <div class=\"dropdown-divider\"></div>\n        <a class=\"dropdown-item\"(click)=\"logout()\"><i class=\"fa fa-sign-out\"></i>Logout</a>\n      </div>\n    </div>\n\n\n    <form *ngIf=\"!loggedIn()\" #loginForm=\"ngForm\" class=\"form-inline my-2 my-lg-0\" (ngSubmit)=\"login()\">\n      <input class=\"form-control mr-sm-2\" type=\"text\" name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"model.username\" >\n      <input class=\"form-control mr-sm-2\" type=\"password\" name=\"password\" placeholder=\"Password\" required [(ngModel)]=\"model.password\" >\n      <button [disabled]=\"!loginForm.valid\" class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\n    </form>\n\n  </div>\n  \n\n\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Routes, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(public authService: AuthService, private alertify: AlertifyService, private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n   this.authService.login(this.model).subscribe(next => {\n     this.alertify.success('Logged in Successfully');\n   }, error => {\n     this.alertify.error('Unauthorised');\n   }, () => {\n    this.router.navigate(['/members']);\n   } );\n\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n}\n\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\n  <hr />\n\n  <div class=\"form-group\">\n    <label class=\"control-label\" style=\"margin-right:10px\">I am a: </label>\n    <label class=\"radio-inline\">\n      <input\n        class=\"mr-3\"\n        type=\"radio\"\n        value=\"male\"\n        formControlName=\"gender\"\n      />Male\n    </label>\n    <label class=\"radio-inline ml-3\">\n      <input\n        class=\"mr-3\"\n        type=\"radio\"\n        value=\"female\"\n        formControlName=\"gender\" \n      />Female\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('username').errors &&\n          registerForm.get('username').touched\n      }\"\n      class=\"form-control\"\n      formControlName=\"username\"\n      placeholder=\"Username\"\n    />\n    <div class=\"invalid-feedback\">Please choose a username</div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('knownAs').errors &&\n          registerForm.get('knownAs').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Known as\"\n      formControlName=\"knownAs\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('knownAs').touched &&\n        registerForm.get('knownAs').hasError('required')\n      \"\n    >\n      Known as is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('dateOfBirth').errors &&\n          registerForm.get('dateOfBirth').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Date of Birth\"\n      formControlName=\"dateOfBirth\"\n      type=\"text\"\n      bsDatepicker\n      [bsConfig]=\"bsConfig\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('dateOfBirth').touched &&\n        registerForm.get('dateOfBirth').hasError('required')\n      \"\n    >\n      Date of Birth is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('city').errors && registerForm.get('city').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"City\"\n      formControlName=\"city\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('city').touched &&\n        registerForm.get('city').hasError('required')\n      \"\n    >\n      City is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('country').errors &&\n          registerForm.get('country').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Country\"\n      formControlName=\"country\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('country').touched &&\n        registerForm.get('country').hasError('required')\n      \"\n    >\n      Country is required\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      type=\"password\"\n      [ngClass]=\"{\n        'is-invalid':\n          registerForm.get('password').errors &&\n          registerForm.get('password').touched\n      }\"\n      class=\"form-control\"\n      formControlName=\"password\"\n      placeholder=\"Password\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('required') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password is required\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('minlength') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password must be at least 4 characters\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('password').hasError('maxlength') &&\n        registerForm.get('password').touched\n      \"\n    >\n      Password cannot exceed 8 characters\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <input\n      [ngClass]=\"{\n        'is-invalid':\n          (registerForm.get('confirmPassword').errors &&\n            registerForm.get('confirmPassword').touched) ||\n          (registerForm.get('confirmPassword').touched &&\n            registerForm.hasError('mismatch'))\n      }\"\n      type=\"password\"\n      class=\"form-control\"\n      formControlName=\"confirmPassword\"\n      placeholder=\"Confirm Password\"\n    />\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.get('confirmPassword').hasError('required') &&\n        registerForm.get('confirmPassword').touched\n      \"\n    >\n      Confirm Password is required\n    </div>\n    <div\n      class=\"invalid-feedback\"\n      *ngIf=\"\n        registerForm.hasError('mismatch') &&\n        registerForm.get('confirmPassword').touched\n      \"\n    >\n      Passwords must match\n    </div>\n  </div>\n\n  <div class=\"form-group text-center\">\n    <button\n      class=\"btn btn-success\"\n      [disabled]=\"!registerForm.valid\"\n      type=\"submit\"\n    >\n      Register\n    </button>\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"cancel()\">\n      Cancel\n    </button>\n  </div>\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\nimport { User } from '../_models/user';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  user: User;\r\n  registerForm: FormGroup;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red'\r\n    };\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.fb.group(\r\n      {\r\n        gender: ['male'],\r\n        username: ['', Validators.required],\r\n        knownAs: ['', Validators.required],\r\n        dateOfBirth: [null, Validators.required],\r\n        city: ['', Validators.required],\r\n        country: ['', Validators.required],\r\n        password: [\r\n          '',\r\n          [\r\n            Validators.required,\r\n            Validators.minLength(4),\r\n            Validators.maxLength(8)\r\n          ]\r\n        ],\r\n        confirmPassword: ['', Validators.required]\r\n      },\r\n      { validator: this.passwordMatchValidator }\r\n    );\r\n  }\r\n\r\n  passwordMatchValidator(g: FormGroup) {\r\n    return g.get('password').value === g.get('confirmPassword').value\r\n      ? null\r\n      : { mismatch: true };\r\n  }\r\n\r\n  register() {\r\n    if (this.registerForm.valid) {\r\n      this.user = Object.assign({}, this.registerForm.value);\r\n      this.authService.register(this.user).subscribe(\r\n        () => {\r\n          this.alertify.success('Registration succesful');\r\n        },\r\n        error => {\r\n          this.alertify.error(error);\r\n        },\r\n        () => {\r\n          this.authService.login(this.user).subscribe(() => {\r\n            this.router.navigate(['/members']);\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4200/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}